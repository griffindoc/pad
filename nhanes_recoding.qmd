---
title: "nhanes_analysis"
format: html
editor: visual
---

#### Load dependencies

The code document for loading and preparing files is: nhanes_loading_files.qmd

```{r Dependencies,include=FALSE}
#| echo: false
library(foreign)
library(tidyverse)
library(purrr)
```

#### Load data

```{r Load datafiles}
#| echo: false
# Restore appended NHANES dataset
df_all<- readRDS("~/Docs/myRprojects/nhanes/data_files/df_all.rds")
#mort_merged<- readRDS("~/Docs/myRprojects/nhanes/data_files/mort_merged.rds")
```

Link mortality data after removing selected columns.

#MORTSTAT Final Mortality Status: 0 = Assumed alive,1 = Assumed deceased

Recode cause of death

```{r Mortality data}
#df_mort.link<-mort_merged%>%
#  rename(diab_mort=diabetes)%>%
#  select(!c(eligstat,permth_exm,permth_int,diab_mort,hyperten))%>%
#  right_join(df_all)%>%
#  distinct(id,mortstat,.keep_all = TRUE)
  
  
```

#### Recoding for most variables

Gender: Males=0 and Females=1

#### Recoding alcohol, ethnicity

Alcohol: Nondrinker (0): said no to 12 drinks in lifetime, drinks\>12 in lifetime: 1

Recoding ethnicity: other Hispanic grouped with other races

|          Value Description          | NHANES Coding | Recoding |
|:-----------------------------------:|:-------------:|:--------:|
|         Non-Hispanic White          |       1       |    1     |
|         Non-Hispanic Black          |       2       |    2     |
|          Mexican American           |       3       |    3     |
| Other Race - Including Multi-Racial |       4       |    4     |
|           Other Hispanic            |       5       |    4     |
|               Missing               |       .       |    na    |

```{r Recoding variables}
df_all <- df_all %>%
  mutate(across(c("diabetes","antidiab_now","insulin_now","ht","antiht_now",
                  "iron_suppl","pregnant_now","cancer",
                  "drinks_life","smoked_100","vig.activity","mod.activity","last_bld.don"), ~recode(., "2"=0)),
         across(c("diabetes","antidiab_now","insulin_now","ht","antiht_now",
                  "iron_suppl","pregnant_now","cancer","drinks_life","smoke_now","smoked_100","vig.activity","mod.activity","last_bld.don"), ~na_if(.,9)),
         across(c("diabetes","antidiab_now","insulin_now","ht","antiht_now",
                  "iron_suppl","pregnant_now","cancer","drinks_life","smoke_now","smoked_100","vig.activity","mod.activity","last_bld.don"),
                ~na_if(.,7)),
         ethnicity = recode(ethnicity,"5"=4),
         gender = recode(gender,"1"=0,"2"=1),
         across(c("diabetes","vig.activity","mod.activity"), ~na_if(.,3)),
         across(c("gender","ethnicity","diabetes","antidiab_now","insulin_now","ht",
                  "antiht_now", "iron_suppl","pregnant_now","cancer","study",
                  "drinks_life","smoke_now","smoked_100","vig.activity","mod.activity","last_bld.don","antihy.lipid","anti.platelet"), as.factor),
         age = na_if(age, 99999))

```

#### Recoding mortality

```{r}
#df_mort.link<-df_mort.link %>%
#  mutate(mort_cvd=case_when(ucod_leading==1~"1",
#                           TRUE~"0"),
#         mort_vd=case_when(ucod_leading==1|ucod_leading==5~"1",
#                            TRUE~"0"))
```

#### Recoding DM, HT

Recode variables related to diabetes. To characterise as diabetes or prediabetes based on ADA criteria:

Diabetes: self reported diabetes=yes, insulin=yes, antidiabetic medication=yes, hba1c\>=6.5,fpg\>7

Prediabetes: fpg 5.6-6.9 mM, hba1c 5.7-6.4

HT: self reported HT=yes, anti ht medication =yes, sbp\>130 or dbp\>80

```{r DM,HT}
df_all<-df_all%>% 
  mutate(diab_coded=case_when(diabetes==0 & fpg<5.6 | diabetes==0 &hba1c<5.7 ~ "0",
                              diabetes==0 & between (fpg, 5.6,7)| diabetes==0 &between (hba1c, 5.7,6.4)~ "1", 
                              diabetes==1 | insulin_now==1 |antidiab_now==1 | fpg>7 | hba1c>=6.5~ "2"),
         ht_coded=case_when(ht==0 | antiht_now==0~ "0",
                                   ht==1 | antiht_now==1| sbp>130| dbp>80~ "1"),
         across(c("diab_coded","ht_coded"),as.factor))
```

#### Recoding PAD

ABI\<0.9= PAD, ABI\>=1.4= arterial stiffness but combined together as PAD

PAD as many different categories

```{r Recoding PAD}
df_all<-df_all%>%
  mutate(pad=case_when(between(left.abpi,0.2,0.9) |between(right.abpi,0.2,0.9)~"1",
                        between(right.abpi, 0.91,1.39) | between(left.abpi, 0.91,1.39)~ "0",
                        right.abpi>=1.4 | left.abpi>=1.4~ "1"),
         pad=as.factor(pad)) 
```

#### Recoding smoking

Recode and label variables for analysis for smoking: the original

Nonsmokers (0): smoked 100 cigarettes in life = No

Former smokers (1): smoked 100=yes and smoke now=Not at all

Current smokers (2): smoked 100= yes

```{r Recode smoking}
df_all<-df_all %>%
  mutate(smoking_coded=case_when(smoked_100==0~ "0",
                                 smoked_100==1 & smoke_now!=3~ "2",
                                 smoked_100==1 & smoke_now==3~ "1"),
         smoking_coded=as.factor(smoking_coded))
```

#### Recoding physical activity

Inactive (0): moderate or vigorous activity in last 30 days = no

Moderate activity (1): \<20 moderate activities/wk or \<12 vigorous activities with MET score \<=6

Vigorous activity (2): \>20 moderate activities/wk or \>12 vigorous activities

```{r Recoding physical activity}
#df_all<-df_all %>%
#  mutate(physical.activity_coded=case_when(mod.activity==1 & pa.times<=20 & met#.score<=6 |
#                                             vig.activity==1 & pa.times<=12 & met.score<=6~ "1",
#                                           mod.activity==1 & pa.times>20 | vig.activity==1 & pa.times>12 ~ "2",
#                                           is.na(mod.activity)& is.na(vig.activity)~ "9",
#                                           TRUE~ "0"),
#         physical.activity_coded= na_if(physical.activity_coded, "9"),
#         physical.activity_coded=as.factor(physical.activity_coded))%>%
#  select(!c(mod.activity,pa.times,met.score,vig.activity))%>%
 # unique()
```

#### Recoding Hyperferritinemia

hemochromatosis (1) and hyperferritinemia (2)

```{r Recoding high ferritin}
df_all<-df_all %>%
  mutate(hi_ferritin=case_when(tsat>45 & gender==0 & ferritin>300 |
                                 tsat>45 & gender==1 & ferritin>200 ~ "1",
                               tsat<=45 & gender==0 & ferritin>300 |
                                 tsat<=45 & gender==1 & ferritin>200 ~ "2"),
         hi_ferritin=as.factor(hi_ferritin))
```

#### Recoding iron indices

after calculating survey-weighted quantiles

ref: https://rstudio-pubs-static.s3.amazonaws.com/919190_c84280bbe9604763a88538a5d3df03da.html#Output_of_svyby()

```{r}
library(survey)
#declare design
nhanesDesign<-survey::svydesign(id=~psu,
                                strata  = ~strata,
                                weights = ~persWeight,
                                nest    = TRUE,
                                data    = df_all)

#calculate survey-weighted quartiles
iron.q <-svyquantile(x = ~iron, 
                     design = nhanesDesign, 
                     na.rm = TRUE, 
                     quantiles = c(0.25, 0.5, 0.75)
                     
)

# Compute the survey-weighted quantiles for the ferritin variable
ferritin.q <-svyquantile(x = ~ferritin, 
                         design = nhanesDesign, 
                         na.rm = TRUE, 
                         quantiles = c(0.25, 0.5, 0.75)
)

# Compute the survey-weighted quantiles for the tsat variable

tsat.q <-svyquantile(x = ~tsat, 
                     design = nhanesDesign, 
                     na.rm = TRUE, 
                     quantiles = c(0.25, 0.5, 0.75)
)

# Compute the survey-weighted quantiles for the tibc variable
tibc.q <-svyquantile(x = ~tibc, 
                     design = nhanesDesign, 
                     na.rm = TRUE, 
                     quantiles = c(0.25, 0.5, 0.75)
)

# Compute the survey-weighted quantiles for the tibc variable
hb.q <-svyquantile(x = ~hb, 
                   design = nhanesDesign, 
                   na.rm = TRUE, 
                   quantiles = c(0.25, 0.5, 0.75)
)

#use the quartile limits and create categories in the dataframe
df_all <- df_all |> 
  mutate(iron.t=case_when(iron<iron.q$iron[1]~"0",
                          between(iron,iron.q$iron[1],iron.q$iron[2]) ~ "1",
                          between(iron,iron.q$iron[2],iron.q$iron[3]) ~ "2",
                          iron>iron.q$iron[3]~"3"),
         ferritin.t=case_when(ferritin<ferritin.q$ferritin[1]~"0",
                              between(ferritin,ferritin.q$ferritin[1],ferritin.q$ferritin[2]) ~ "1",
                              between(ferritin,ferritin.q$ferritin[2],ferritin.q$ferritin[3]) ~ "2",
                              ferritin>ferritin.q$ferritin[3]~"3"),
         tsat.t=case_when(tsat<tsat.q$tsat[1]~"0",
                          between(tsat,tsat.q$tsat[1],tsat.q$tsat[2]) ~ "1",
                          between(tsat,tsat.q$tsat[2],tsat.q$tsat[3]) ~ "2",
                          tsat>tsat.q$tsat[3]~"3"),
         tibc.t=case_when(tibc<tibc.q$tibc[1]~"0",
                          between(tibc,tibc.q$tibc[1],tibc.q$tibc[2]) ~ "1",
                          between(tibc,tibc.q$tibc[2],tibc.q$tibc[3]) ~ "2",
                          tibc>tibc.q$tibc[3]~"3"),
         hb.t=case_when(hb<hb.q$hb[1]~"0",
                        between(hb,hb.q$hb[1],hb.q$hb[2]) ~ "1",
                        between(hb,hb.q$hb[2],hb.q$hb[3]) ~ "2",
                        hb>hb.q$hb[3]~"3"),
         iron_scaled=scale(iron),
         ferritin_scaled=scale(ferritin),
         tsat_scaled=scale(tsat),
         tibc_scaled=scale(tibc),
         hb_scaled=scale(hb),
         iron.clust=if_else(ferritin>ferritin.q$ferritin[2]&iron<iron.q$iron[2]|
                                tsat<tsat.q$tsat[2]|tibc<tibc.q$tibc[2],"1","0"),
         across(c("iron.t","ferritin.t","tsat.t","tibc.t","iron.clust"),as.factor)
  )

rm(ferritin.q,iron.q,hb.q,tibc.q,tsat.q)
```

#### Scale variables

```{r}
df_all <- df_all |> 
  mutate(hdl_scaled=scale(hdl),
         ldl_scaled=scale(ldl),
         crp_scaled=scale(crp),
         hba1c_scaled=scale(hba1c)
         )
```

#### Recoding hormonal treatment

estrogen pills now, progesterone pills now, estrogen+progesterone pills now, estrogen patches now,

estrogen progesterone patches now =yes

```{r}
df_all<-df_all%>%
  mutate(hrt_now=case_when(est.pills_now==1 |
                             prog.pills_now==1 |
                             estprog.pills_now==1 |
                             est.patches_now==1 |
                             estprog.patches_now==1~ "1"))
```

#### Recoding NAFLD

Ref:

Formula for FIB-4 score: (age × AST)/(platelets (109/L × (√ALT))

FIB-4: \<=1.3: Low risk of fibrosis, 1.31-3.25: indeterminate, \>3.25 high risk of fibrosis

```{r}
df_all<-df_all%>%
  mutate(fib4=with(.,(age*ast)/(platelet*sqrt(alt))),
         fib4_coded=case_when(fib4<=1.3~"0",
                              between(fib4,1.31,3.25) ~ "1",
                              fib4>3.25~ "2"),
         fib4_coded=as.factor(fib4_coded))
```

#### Recoding albuminuria

```{r}
df_all<-df_all%>%
  mutate(acr=(albuminuria*1000/creatinuria),
         acr_coded=case_when(acr<3~"0",
                              between(acr,3,30) ~ "1",
                              acr>30~ "2"),
         acr_coded=as.factor(acr_coded),
         acr_scaled=scale(acr))
```

#### Recoding anemia

```{r}
df_all<-df_all%>%
  mutate(anemia = if_else(hb<10.0,1,0),
         anemia=as.factor(anemia))
```

#### Recoding Pregnancy, breastfeed-1yr, menopause

Menopause is not clearly defined in the three different cycles, so separating out premenstrual women is not straightforward.

```{r}
df_all<-df_all%>%
  mutate(preg_1yr= if_else(pregnant_now==1 |periods_1yr==1 |periods_1yr==3,1,0),
         breast.feed_1yr= if_else(breast.feed_now==1|periods_1yr==2,1,0),
         menopause=if_else(periods_1yr==5 |periods_1yr==7,1,0),
          across(c("preg_1yr","breast.feed_1yr","menopause"),as.factor))
```

#### Exclusion factors

periods now=1, hrt_now=1, hemochromatosis=1, blood donation\<1 month, cancer=1, hormone replacement =1, iron supplements=1, breast feeding=1

```{r Filter}
#is.na is included to avoid exclusion of NA
#declare study design
nhanes.all<-survey::svydesign(id=~psu,
                                strata  = ~strata,
                                weights = ~persWeight,
                                nest    = TRUE,
                                data    = df_all)

#subset including survey design
nhanesDesign <- nhanes.all |>
  subset(!is.na(pad)) |> 
  subset(hi_ferritin!="1"| is.na(hi_ferritin)) |> 
  subset(breast.feed_1yr!=1 | is.na(breast.feed_1yr)) |> 
  subset(preg_1yr!=1 | is.na(preg_1yr)) |> 
  subset(last_bld.don!=1 | is.na(last_bld.don)) |> 
  subset(hrt_now!=1 | is.na(hrt_now)) |> 
  subset(iron_suppl!=1 | is.na(iron_suppl)) |> 
  subset(cancer!=1 | is.na(cancer)) |> 
  subset(dialysis!=1 | is.na(dialysis)) |> 
  subset(fib4_coded!=2 | is.na(fib4_coded)) |> 
  subset(acr_coded!=2 | is.na(acr_coded)) |> 
  subset(ldl<4.9| is.na(ldl)) |> 
  subset(crp<3| is.na(crp)) |> 
  subset(anemia!=1| is.na(anemia))

#save a datafile for sensitivity analysis 
saveRDS(nhanes.all, "~/Docs/myRprojects/nhanes/data_files/nhanes.all.rds")

#save a final datafile for analysis 
saveRDS(nhanesDesign, "~/Docs/myRprojects/nhanes/data_files/nhanesDesign.rds")

```
